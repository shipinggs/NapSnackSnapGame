module gameonemanager (
    input clk,  // clock
    input rst,  // reset
    input start,
    input aluout[8],              // ALU result from parent module mojo_top
    output alufn[6],              // to tell parent module which ALU operation to use. In this case, it is SUBTRACTION.
    output alua[8],           
    output alub[8],
    input playeronebuttons[3],    //edge_detector outputs for all 9 player buttons  
    input playertwobuttons[3],
    input playerthreebuttons[3],
    output centralsevenseg[8],    // 8-bit number to be displayed on the central sevensegs in decimal
    output playerleds[6]          // {playerone[5:4], playertwo[3:2], playerthree[1:0]}
  ) {
  
  .clk(clk), .rst(rst) {
    
    fsm gameonestate = {STARTCOUNTDOWN, PLAYERONE, PLAYERTWO, PLAYERTHREE, PLAYERONEWIN, PLAYERTWOWIN, PLAYERTHREEWIN, ALLLOSE};
    countdowntimer gameonecountdowntimer (#SIZE(3), #DIV(25));  // This is for the countdown stage at the start of every round
    gameonedecreasecounter gameonedecreasecounter;     // this counter is for keeping track of the remainder
  }
  
  
  always {
    alufn = gameonedecreasecounter.alufn;        // Connections to ALU module at parent module
    alua = gameonedecreasecounter.remainder;
    alub = gameonedecreasecounter.alub;
    gameonedecreasecounter.aluout = aluout;
    gameonedecreasecounter.start = 0;
    gameonedecreasecounter.decrease = 0;
    gameonedecreasecounter.decreaseamount = 0;
    
    gameonecountdowntimer.start = 0;
    centralsevenseg = gameonedecreasecounter.remainder;
    playerleds = 0;

    
    if (start) {                                     // when the game two select button is pressed
      gameonecountdowntimer.start = 1;               // reset the countdowntimer to 5.
      gameonedecreasecounter.start = 1;              // reset the gameonedecreasecounter to initialize at 30.  
      gameonestate.d = gameonestate.STARTCOUNTDOWN;  // go to countdown state to prepare players
    }
    
    case (gameonestate.q) {
    
      gameonestate.STARTCOUNTDOWN:
        centralsevenseg = gameonecountdowntimer.value;  // show countdowntimer value on the central sevensegs
        if (gameonecountdowntimer.timerdone) {
          gameonestate.d = gameonestate.PLAYERONE;      // once timer is down, it becomes player one's turn
        }
      
      gameonestate.PLAYERONE:
        playerleds = 6b100000;                            // so player one knows that it is his/her turn.
        if (playeronebuttons[0]) {                        // if "minus one" button is pressed
          gameonedecreasecounter.decrease = 1;            // allow counter to decrease
          gameonedecreasecounter.decreaseamount = 2b1;    // and decrease by 1
          gameonestate.d = gameonestate.PLAYERTWO;
        } else if (playeronebuttons[1]) {
          gameonedecreasecounter.decrease = 1;
          gameonedecreasecounter.decreaseamount = 2b10;    // decrease by 2
          gameonestate.d = gameonestate.PLAYERTWO;
        } else if (playeronebuttons[2]) {
          gameonedecreasecounter.decrease = 1;
          gameonedecreasecounter.decreaseamount = 2b11;    // decrease by 3
          gameonestate.d = gameonestate.PLAYERTWO;
        }
        if (gameonedecreasecounter.gameone_end) {          // if remainder is already 0,
          gameonestate.d = gameonestate.PLAYERTHREEWIN;    // that'll mean the previous player has won
        } else if (gameonedecreasecounter.gameone_lose) {  // else if the remainder is less than 0,
          gameonestate.d = gameonestate.ALLLOSE;           // the previous player couldn't count from 1 to 3, and everyone loses
        }
        
      gameonestate.PLAYERTWO:
        playerleds = 6b001000;                              // so player two knows it is his/her turn.
        if (playertwobuttons[0]) {                          // similar logic to player one
          gameonedecreasecounter.decrease = 1;
          gameonedecreasecounter.decreaseamount = 2b1;
          gameonestate.d = gameonestate.PLAYERTHREE;
        } else if (playertwobuttons[1]) {
          gameonedecreasecounter.decrease = 1;
          gameonedecreasecounter.decreaseamount = 2b10;
          gameonestate.d = gameonestate.PLAYERTHREE;
        } else if (playertwobuttons[2]) {
          gameonedecreasecounter.decrease = 1;
          gameonedecreasecounter.decreaseamount = 2b11;
          gameonestate.d = gameonestate.PLAYERTHREE;
        }
        if (gameonedecreasecounter.gameone_end) {
          gameonestate.d = gameonestate.PLAYERONEWIN;
        } else if (gameonedecreasecounter.gameone_lose) {
          gameonestate.d = gameonestate.ALLLOSE;
        }
        
      gameonestate.PLAYERTHREE:
        playerleds = 6b000010;                              // so player three knows it is his/her turn.
        if (playerthreebuttons[0]) {                        // similar logic to player one
          gameonedecreasecounter.decrease = 1;
          gameonedecreasecounter.decreaseamount = 2b1;
          gameonestate.d = gameonestate.PLAYERONE;
        } else if (playerthreebuttons[1]) {
          gameonedecreasecounter.decrease = 1;
          gameonedecreasecounter.decreaseamount = 2b10;
          gameonestate.d = gameonestate.PLAYERONE;
        } else if (playerthreebuttons[2]) {
          gameonedecreasecounter.decrease = 1;
          gameonedecreasecounter.decreaseamount = 2b11;
          gameonestate.d = gameonestate.PLAYERONE;
        }
        if (gameonedecreasecounter.gameone_end) {
          gameonestate.d = gameonestate.PLAYERTWOWIN;
        } else if (gameonedecreasecounter.gameone_lose) {
          gameonestate.d = gameonestate.ALLLOSE;
        }
               
      gameonestate.PLAYERONEWIN:
        playerleds = 6b100101;                                                      // leds to show who won
        if (playeronebuttons[0] || playeronebuttons[1] || playeronebuttons[2]       // if any button is pressed
         || playertwobuttons[0] || playertwobuttons[1] || playertwobuttons[2]
         || playerthreebuttons[0] || playerthreebuttons[1] || playerthreebuttons[2]) {
          gameonecountdowntimer.start = 1;                                          // reset the countdowntimer to 5.
          gameonedecreasecounter.start = 1;                                         // reset decrease counter to 30.
          gameonestate.d = gameonestate.STARTCOUNTDOWN;                             // start new round
        }
        
      gameonestate.PLAYERTWOWIN:
        playerleds = 6b011001;                                                      // leds to show who won
        if (playeronebuttons[0] || playeronebuttons[1] || playeronebuttons[2]       // if any button is pressed
         || playertwobuttons[0] || playertwobuttons[1] || playertwobuttons[2]
         || playerthreebuttons[0] || playerthreebuttons[1] || playerthreebuttons[2]) {
          gameonecountdowntimer.start = 1;                                          // reset the countdowntimer to 5.
          gameonedecreasecounter.start = 1;                                         // reset decrease counter to 30.
          gameonestate.d = gameonestate.STARTCOUNTDOWN;                             // start new round
        }
      
      gameonestate.PLAYERTHREEWIN:
        playerleds = 6b010110;                                                      // leds to show who won
        if (playeronebuttons[0] || playeronebuttons[1] || playeronebuttons[2]       // if any button is pressed
         || playertwobuttons[0] || playertwobuttons[1] || playertwobuttons[2]
         || playerthreebuttons[0] || playerthreebuttons[1] || playerthreebuttons[2]) {
          gameonecountdowntimer.start = 1;                                          // reset the countdowntimer to 5.
          gameonedecreasecounter.start = 1;                                         // reset decrease counter to 30.
          gameonestate.d = gameonestate.STARTCOUNTDOWN;                             // start new round
        }
        
      gameonestate.ALLLOSE:
        playerleds = 6b010101;                                                      // leds to show the last person couldn't count
        if (playeronebuttons[0] || playeronebuttons[1] || playeronebuttons[2]       // if any button is pressed
         || playertwobuttons[0] || playertwobuttons[1] || playertwobuttons[2]
         || playerthreebuttons[0] || playerthreebuttons[1] || playerthreebuttons[2]) {
          gameonecountdowntimer.start = 1;                                          // reset the countdowntimer to 5.
          gameonedecreasecounter.start = 1;                                         // reset decrease counter to 30.
          gameonestate.d = gameonestate.STARTCOUNTDOWN;                             // start new round
        }
               
    }    
  }  
}
